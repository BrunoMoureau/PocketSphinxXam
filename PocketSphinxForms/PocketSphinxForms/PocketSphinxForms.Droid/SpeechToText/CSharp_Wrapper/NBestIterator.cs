//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

using SphinxBase;

namespace PocketSphinx {

public class NBestIterator : global::System.Collections.IEnumerator {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NBestIterator(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NBestIterator obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NBestIterator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PocketSphinxPINVOKE.delete_NBestIterator(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public object Current 
  {
     get
     {
       return GetCurrent();
     }
  }

  public NBestIterator(SWIGTYPE_p_void ptr) : this(PocketSphinxPINVOKE.new_NBestIterator(SWIGTYPE_p_void.getCPtr(ptr)), true) {
  }

  public bool MoveNext() {
    bool ret = PocketSphinxPINVOKE.NBestIterator_MoveNext(swigCPtr);
    return ret;
  }

  public void Reset() {
    PocketSphinxPINVOKE.NBestIterator_Reset(swigCPtr);
  }

  public NBest GetCurrent() {
    global::System.IntPtr cPtr = PocketSphinxPINVOKE.NBestIterator_GetCurrent(swigCPtr);
    NBest ret = (cPtr == global::System.IntPtr.Zero) ? null : new NBest(cPtr, false);
    return ret;
  }

}

}

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SphinxBase {

public class Config : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Config(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Config obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Config() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SphinxBasePINVOKE.delete_Config(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public void SetBoolean(string key, bool val) {
    SphinxBasePINVOKE.Config_SetBoolean(swigCPtr, key, val);
  }

  public void SetInt(string key, int val) {
    SphinxBasePINVOKE.Config_SetInt(swigCPtr, key, val);
  }

  public void SetFloat(string key, double val) {
    SphinxBasePINVOKE.Config_SetFloat(swigCPtr, key, val);
  }

  public void SetString(string key, string val) {
    SphinxBasePINVOKE.Config_SetString(swigCPtr, key, val);
  }

  public void SetStringExtra(string key, string val) {
    SphinxBasePINVOKE.Config_SetStringExtra(swigCPtr, key, val);
  }

  public bool Exists(string key) {
    bool ret = SphinxBasePINVOKE.Config_Exists(swigCPtr, key);
    return ret;
  }

  public bool GetBoolean(string key) {
    bool ret = SphinxBasePINVOKE.Config_GetBoolean(swigCPtr, key);
    return ret;
  }

  public int GetInt(string key) {
    int ret = SphinxBasePINVOKE.Config_GetInt(swigCPtr, key);
    return ret;
  }

  public double GetFloat(string key) {
    double ret = SphinxBasePINVOKE.Config_GetFloat(swigCPtr, key);
    return ret;
  }

  public string GetString(string key) {
    string ret = SphinxBasePINVOKE.Config_GetString(swigCPtr, key);
    return ret;
  }

}

}

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SphinxBase {

public class FsgModel : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FsgModel(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FsgModel obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FsgModel() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SphinxBasePINVOKE.delete_FsgModel(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FsgModel(string name, LogMath logmath, float lw, int n) : this(SphinxBasePINVOKE.new_FsgModel__SWIG_0(name, LogMath.getCPtr(logmath), lw, n), true) {
  }

  public FsgModel(string path, LogMath logmath, float lw) : this(SphinxBasePINVOKE.new_FsgModel__SWIG_1(path, LogMath.getCPtr(logmath), lw), true) {
  }

  public int WordId(string word) {
    int ret = SphinxBasePINVOKE.FsgModel_WordId(swigCPtr, word);
    return ret;
  }

  public int WordAdd(string word) {
    int ret = SphinxBasePINVOKE.FsgModel_WordAdd(swigCPtr, word);
    return ret;
  }

  public void TransAdd(int src, int dst, int logp, int wid) {
    SphinxBasePINVOKE.FsgModel_TransAdd(swigCPtr, src, dst, logp, wid);
  }

  public int NullTransAdd(int src, int dst, int logp) {
    int ret = SphinxBasePINVOKE.FsgModel_NullTransAdd(swigCPtr, src, dst, logp);
    return ret;
  }

  public int TagTransAdd(int src, int dst, int logp, int wid) {
    int ret = SphinxBasePINVOKE.FsgModel_TagTransAdd(swigCPtr, src, dst, logp, wid);
    return ret;
  }

  public int AddSilence(string silword, int state, float silprob) {
    int ret = SphinxBasePINVOKE.FsgModel_AddSilence(swigCPtr, silword, state, silprob);
    return ret;
  }

  public int AddAlt(string baseword, string altword) {
    int ret = SphinxBasePINVOKE.FsgModel_AddAlt(swigCPtr, baseword, altword);
    return ret;
  }

  public void Writefile(string path) {
    SphinxBasePINVOKE.FsgModel_Writefile(swigCPtr, path);
  }

}

}
